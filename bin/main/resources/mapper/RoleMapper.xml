<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lixiang.ssm.dao.RoleMapper">
	<resultMap id="BaseResultMap" type="com.lixiang.ssm.entity.Role">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu May 03 
			17:07:31 CST 2018. -->
		<constructor>
			<idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
			<arg column="role_name" javaType="java.lang.String" jdbcType="VARCHAR" />
			<arg column="role_desc" javaType="java.lang.String" jdbcType="VARCHAR" />
			<arg column="creator_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
			<arg column="creator_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
			<arg column="modifior_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
			<arg column="modify_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
		</constructor>
	</resultMap>
	<sql id="Base_Column_List">
		id, role_name, role_desc, creator_id, creator_date, modifior_id,
		modify_date
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="getAllRoles"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu May 03 
			17:07:31 CST 2018. -->
		select
		<include refid="Base_Column_List" />
		from role
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu May 03 
			17:07:31 CST 2018. -->
		delete from role
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteRoleByRoleId" parameterType="java.lang.Integer">
		delete from role
		where id = #{id,jdbcType=INTEGER}
	</delete>
	
	<insert id="insert" parameterType="com.lixiang.ssm.entity.Role">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu May 03 
			17:07:31 CST 2018. -->
		insert into role (id, role_name, role_desc,
		creator_id, creator_date,
		modifior_id,
		modify_date)
		values (#{id,jdbcType=INTEGER},
		#{roleName,jdbcType=VARCHAR},
		#{roleDesc,jdbcType=VARCHAR},
		#{creatorId,jdbcType=INTEGER}, #{creatorDate,jdbcType=TIMESTAMP},
		#{modifiorId,jdbcType=INTEGER},
		#{modifyDate,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.lixiang.ssm.entity.Role">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu May 03 
			17:07:31 CST 2018. -->
		insert into role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="roleDesc != null">
				role_desc,
			</if>
			<if test="creatorId != null">
				creator_id,
			</if>
			<if test="creatorDate != null">
				creator_date,
			</if>
			<if test="modifiorId != null">
				modifior_id,
			</if>
			<if test="modifyDate != null">
				modify_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleDesc != null">
				#{roleDesc,jdbcType=VARCHAR},
			</if>
			<if test="creatorId != null">
				#{creatorId,jdbcType=INTEGER},
			</if>
			<if test="creatorDate != null">
				#{creatorDate,jdbcType=TIMESTAMP},
			</if>
			<if test="modifiorId != null">
				#{modifiorId,jdbcType=INTEGER},
			</if>
			<if test="modifyDate != null">
				#{modifyDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.lixiang.ssm.entity.Role">
		update role
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleDesc != null">
				role_desc = #{roleDesc,jdbcType=VARCHAR},
			</if>
			<if test="creatorId != null">
				creator_id = #{creatorId,jdbcType=INTEGER},
			</if>
			<if test="creatorDate != null">
				creator_date = #{creatorDate,jdbcType=TIMESTAMP},
			</if>
			<if test="modifiorId != null">
				modifior_id = #{modifiorId,jdbcType=INTEGER},
			</if>
			<if test="modifyDate != null">
				modify_date = #{modifyDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.lixiang.ssm.entity.Role">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu May 03 
			17:07:31 CST 2018. -->
		update role
		set role_name = #{roleName,jdbcType=VARCHAR},
		role_desc =
		#{roleDesc,jdbcType=VARCHAR},
		creator_id =
		#{creatorId,jdbcType=INTEGER},
		creator_date =
		#{creatorDate,jdbcType=TIMESTAMP},
		modifior_id =
		#{modifiorId,jdbcType=INTEGER},
		modify_date =
		#{modifyDate,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="getRoleByUserName" resultType="string">
		SELECT c.role_name
		FROM USER a,user_role b,role c WHERE a.id=b.user_id AND
		b.role_id=c.id
		AND a.username=#{username}
		UNION
		SELECT e.role_name FROM USER
		a,ugroup_user b,ugroup_role d,role e
		WHERE a.id=b.user_id AND
		b.group_id=d.group_id AND d.role_id=e.id AND
		a.username=#{username}
	</select>
	<select id="getRoleNameByUserId" resultType="string">
		SELECT distinct c.role_desc
		FROM USER a,user_role b,role c WHERE a.id=b.user_id AND
		b.role_id=c.id
		AND a.id=#{id}
		UNION
		SELECT distinct e.role_name FROM USER
		a,ugroup_user b,ugroup_role d,role e
		WHERE a.id=b.user_id AND
		b.group_id=d.group_id AND d.role_id=e.id AND
		a.id=#{id}
	</select>
	<select id="getPermsByUserName" resultType="string">
		SELECT f.auth FROM
		USER a,user_role b,role c,role_resource e, resources f
		WHERE
		a.id=b.user_id AND b.role_id=c.id AND c.id=e.role_id AND
		e.res_id=f.id
		AND a.username=#{username}

		UNION
		SELECT g.auth FROM USER a,ugroup_user
		b,ugroup_role d,role e,role_resource
		f, resources g
		WHERE a.id=b.user_id
		AND b.group_id=d.group_id AND d.role_id=e.id
		AND e.id=f.role_id AND
		f.res_id=g.id
		AND a.username=#{username}
	</select>

	<select id="getRolesForUsername" resultType="com.lixiang.ssm.entity.Role">
		SELECT
		a.id,a.role_name,a.role_desc,b.role_name myrole FROM role a

		LEFT JOIN

		(
		SELECT c.id, c.role_name
		FROM USER a,user_role b,role c WHERE
		a.id=b.user_id AND
		b.role_id=c.id
		AND a.username=#{username}
		UNION
		SELECT
		e.id, e.role_name FROM USER
		a,ugroup_user b,ugroup_role d,role e
		WHERE
		a.id=b.user_id AND
		b.group_id=d.group_id AND d.role_id=e.id AND
		a.username=#{username}
		) b

		ON a.id=b.id



	</select>

	<select id="getRolesForUserId" resultType="com.lixiang.ssm.entity.Role">
		SELECT
		a.id,a.role_name,a.role_desc,b.role_name myrole FROM role a

		LEFT JOIN

		(
		SELECT c.id, c.role_name
		FROM USER a,user_role b,role c WHERE
		a.id=b.user_id AND
		b.role_id=c.id
		AND a.id=#{id}
		UNION
		SELECT
		e.id,
		e.role_name FROM USER
		a,ugroup_user b,ugroup_role d,role e
		WHERE
		a.id=b.user_id AND
		b.group_id=d.group_id AND d.role_id=e.id AND
		a.id=#{id}
		) b

		ON a.id=b.id

	</select>

	<select id="getResForRoleId" resultType="com.lixiang.ssm.entity.Resources">

		SELECT a.id,a.res_name,a.res_url,b.res_name myresource FROM resources a

		LEFT
		JOIN

		(
		SELECT c.id, c.res_name
		FROM role a,role_resource b,resources c
		WHERE
		a.id=b.role_id AND
		b.res_id=c.id
		AND a.id=#{id}
		) b

		ON a.id=b.id WHERE a.type=1


	</select>

	<delete id="deleteRoleByUserId">
		delete from user_role where user_id=#{userId}
	</delete>
	<delete id="deleteResByRoleId">
		delete from role_resource where role_id=#{roleId}
	</delete>
	<insert id="batchAddRole">
		insert into user_role(user_id,role_id)
		values
		<foreach collection="roleIds" item="roleId" separator=",">
			(#{userId},#{roleId})
		</foreach>

	</insert>
	

	<select id="getUserNanme" resultType="String">
		
	
	</select>

	<insert id="batchAddRes">
		insert into role_resource(role_id,res_id)
		values
		<foreach collection="resIds" item="resId" separator=",">
			(#{roleId},#{resId})
		</foreach>

	</insert>



	<select id="getRolesList" resultType="com.lixiang.ssm.entity.Role">

		SELECT * FROM role


	</select>

	<select id="list" resultMap="BaseResultMap">
		select * from role
		<where>
			<if test="roleName != null and roleName!=''">
				<bind name="roleName2" value="'%'+roleName+'%'" />
				and role_name like #{roleName2}
			</if>

		</where>
	</select>

</mapper>