package com.lixiang.ssm.dao;

import java.util.List;

import com.lixiang.ssm.entity.LoanProject;
import com.lixiang.ssm.entity.OperateRecord;
import com.lixiang.ssm.entity.User;

public interface LoanProjectMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_loan_project
     *
     * @mbg.generated Wed May 16 12:22:04 CST 2018
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_loan_project
     *
     * @mbg.generated Wed May 16 12:22:04 CST 2018
     */
    int insert(LoanProject record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_loan_project
     *
     * @mbg.generated Wed May 16 12:22:04 CST 2018
     */
    int insertSelective(LoanProject record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_loan_project
     *
     * @mbg.generated Wed May 16 12:22:04 CST 2018
     */
    LoanProject selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_loan_project
     *
     * @mbg.generated Wed May 16 12:22:04 CST 2018
     */
    int updateByPrimaryKeySelective(LoanProject record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_loan_project
     *
     * @mbg.generated Wed May 16 12:22:04 CST 2018
     */
    int updateByPrimaryKey(LoanProject record);
    
    List<LoanProject> listLoanProject(LoanProject loanProject);
    
   boolean updateLoanSubmit(LoanProject loanProject);
   
   boolean subloanproject(LoanProject loanProject);
   
   boolean backloanproject(LoanProject loanProject);
   
   boolean agree(LoanProject loanProject);
   boolean alreadyreleased(LoanProject loanProject);
   
   /**
    * 查询待放款的项目
    * @param operateRecord
    * @return
    */
   List<LoanProject> readyloan(LoanProject loanProject);
    
}